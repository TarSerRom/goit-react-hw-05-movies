{"version":3,"file":"static/js/700.c7f82d69.chunk.js","mappings":"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","sources":["components/MovieCast/MovieCast.js","components/MovieReviews/MovieReviews.js","pages/MoviesDetailsPage/MoviesDetailsPage.js","services/fetchApi.js","services/slug.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getMovieCast } from \"../../services/fetchApi\";\nimport './MovieCast.css'\n\nconst MovieCast = ({ movieId }) => {\n    const [cast, setCast] = useState(null);\n\n    const anchor = document.querySelector(\"#cast\");\n\n    useEffect(() => {\n        const getCast = async () => {\n          const { cast } = await getMovieCast(movieId);\n    \n          setCast(cast);\n    \n          if (anchor) {\n            window.scrollTo({\n              top: anchor.offsetTop,\n              behavior: \"smooth\",\n            });\n          }\n        };\n    \n        getCast();\n      }, [movieId, anchor]);\n\n      return (\n        <div>\n          <ul className=\"cast_list\" id=\"cast\">\n            {cast &&\n              cast.map(({ id, profile_path, original_name, character }) => (\n                <li key={id} className=\"cast_item\">\n                  <img\n                    src={\n                      profile_path\n                        ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                        : \"https://image.shutterstock.com/image-vector/no-image-available-photo-coming-600w-2059817444.jpg\"\n                    }\n                    alt={original_name}\n                  />\n                  <div className=\"cast_descriprion\">\n                    <p className=\"cast_person\">{original_name}</p>\n                    <p className=\"cast_character\">Character: {character}</p>\n                  </div>\n                </li>\n              ))}\n          </ul>\n        </div>\n      );\n    };\n    \n    export default MovieCast;\n","import React, { useEffect, useState } from \"react\";\nimport { getReviews } from \"../../services/fetchApi\";\nimport './MovieReviews.css';\n\nconst MovieReviews = ({ movieId }) => {\n  const [reviews, setReviews] = useState(null);\n\n  const anchor = document.querySelector(\"#reviews\");\n\n  useEffect(() => {\n    const getCast = async () => {\n      const { results } = await getReviews(movieId);\n\n      setReviews(results);\n\n      if (anchor) {\n        window.scrollTo({\n          top: anchor.offsetTop,\n          behavior: \"smooth\",\n        });\n      }\n    };\n\n    getCast();\n  }, [movieId, anchor]);\n\n  return (\n    <div id=\"reviews\">\n      {reviews && (\n        <ul>\n          {reviews ? (\n            reviews.map(({ id, author, content }) => (\n              <li key={id} className=\"review_item\">\n                <h3>Author: {author}</h3>\n                <p className=\"review_text\">{content}</p>\n              </li>\n            ))\n          ) : (\n            <li>We don't have any reviews for this movie</li>\n          )}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default MovieReviews;","import React, { useEffect, useState } from \"react\";\nimport {\n  Route,\n  NavLink,\n  useHistory,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { getMovieDetails } from \"../../services/fetchApi\";\nimport { getIdFromSlug } from \"../../services/slug\";\nimport MovieCast from \"../../components/MovieCast/MovieCast\";\nimport MovieReviews from \"../../components/MovieReviews/MovieReviews\";\n\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState(null);\n\n  const location = useLocation();\n  const history = useHistory();\n  const { slug } = useParams();\n  const { url } = useRouteMatch();\n\n  const movieId = getIdFromSlug(slug);\n\n  useEffect(() => {\n    const getMovie = async () => {\n      const currentMovie = await getMovieDetails(movieId);\n\n      setMovie(currentMovie);\n    };\n\n    getMovie();\n  }, [movieId]);\n\n  const handleGoBack = () => {\n    history.push(location?.state?.from?.location ?? \"/movies\");\n  };\n\n  return (\n    <>\n      {movie && (\n        <section className=\"movieDetails\">\n          <div className=\"mainContainer\">\n            <button\n              type=\"button\"\n              onClick={handleGoBack}\n              className=\"movieDetails_button\"\n            >\n              {location?.state?.from?.label ?? \"Find another movie\"}\n            </button>\n\n            <div className=\"movieCard\">\n              <div className=\"posterContainer\">\n                <img\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n                      : \"https://image.shutterstock.com/image-vector/no-image-available-photo-coming-600w-2059817444.jpg\"\n                  }\n                  alt={movie.title}\n                />\n              </div>\n\n              <div className=\"movie_description\">\n                <h2 className=\"moviecard_title\">\n                  {movie.title} ({movie.release_date.slice(0, 4)})\n                </h2>\n                <p className=\"moviecard_text\">\n                  User score: {movie.vote_average}\n                </p>\n\n                <h3>Overview</h3>\n                <p className=\"moviecard_text\">\n                  {movie.overview ? movie.overview : \"No overwies yet\"}\n                </p>\n\n                <h3>Genres</h3>\n                <p>{movie.genres.map((genre) => genre.name).join(\", \")}</p>\n              </div>\n            </div>\n\n            <div className=\"additionalInfo\">\n              <h3>Additional Information</h3>\n              <ul className=\"additionalInfo_list\">\n                <li className=\"additionalInfo_item\">\n                  <NavLink\n                    className=\"additionalInfo_link\"\n                    activeClassName=\"additionalInfo_activeLink\"\n                    to={{ pathname: `${url}/cast`, state: location.state }}\n                  >\n                    Cast\n                  </NavLink>\n                </li>\n                <li className=\"additionalInfo_item\">\n                  <NavLink\n                    className=\"additionalInfo_link\"\n                    activeClassName=\"additionalInfo_activeLink\"\n                    to={{ pathname: `${url}/reviews`, state: location.state }}\n                  >\n                    Reviews\n                  </NavLink>\n                </li>\n              </ul>\n            </div>\n\n            <Route path={`${url}/cast`}>\n              <MovieCast movieId={movieId} />\n            </Route>\n\n            <Route path={`${url}/reviews`}>\n              <MovieReviews movieId={movieId} />\n            </Route>\n          </div>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from \"axios\";\nconst apiKey = \"?api_key=90cb713cbad21b579532fb5c59ca1f23\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nexport const fetchTrendingMovies = async () => {\n  const queryString = `trending/movie/day${apiKey}`;\n\n  const { data: movies } = await axios.get(queryString);\n\n  return movies;\n};\n\nexport const searchMovies = async (stringToSearch) => {\n  const queryString = `search/movie${apiKey}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n\n  const { data: movies } = await axios.get(queryString);\n\n  return movies;\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const queryString = `movie/${movieId}${apiKey}&language=en-US`;\n\n  const { data: movie } = await axios.get(queryString);\n\n  return movie;\n};\n\nexport const getMovieCast = async (movieId) => {\n  const queryString = `movie/${movieId}/credits${apiKey}&language=en-US`;\n\n  const { data } = await axios.get(queryString);\n\n  return data;\n};\n\nexport const getReviews = async (movieId) => {\n  const queryString = `movie/${movieId}/reviews${apiKey}&language=en-US`;\n\n  const { data } = await axios.get(queryString);\n\n  return data;\n};","import slugify from \"slugify\";\n\nexport const makeSlug = (string) =>\n  slugify(string, {\n    lower: true,\n  });\n\nexport const getIdFromSlug = (slug) => slug.match(/[a-z0-9]+$/)[0];"],"names":["movieId","useState","cast","setCast","anchor","document","querySelector","useEffect","getCast","getMovieCast","window","scrollTo","top","offsetTop","behavior","className","id","map","profile_path","original_name","character","src","alt","reviews","setReviews","getReviews","results","author","content","movie","setMovie","location","useLocation","history","useHistory","slug","useParams","url","useRouteMatch","getIdFromSlug","getMovie","getMovieDetails","currentMovie","type","onClick","push","state","from","label","poster_path","title","release_date","slice","vote_average","overview","genres","genre","name","join","activeClassName","to","pathname","path","apiKey","axios","fetchTrendingMovies","queryString","movies","data","searchMovies","stringToSearch","makeSlug","string","slugify","lower","match"],"sourceRoot":""}
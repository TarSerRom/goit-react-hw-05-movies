{"version":3,"file":"static/js/731.244779d1.chunk.js","mappings":"yRA0DI,EApDS,WACT,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MAYjB,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,uGACUC,EAAAA,EAAAA,MADV,gBACRC,EADQ,EACRA,QAERN,EAAUM,GAHM,2CAAH,qDAMfF,MACC,KAGC,oBAASG,UAAU,WAAnB,UACE,iBAAKA,UAAU,gBAAf,WACE,eAAIA,UAAU,QAAd,6BAEA,eAAIA,UAAU,YAAd,SACGR,EAAOS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,eAAIJ,UAAU,iBAAd,UACE,UAAC,KAAD,CACEK,GAAI,CACFC,SAAS,WAAD,QAAaC,EAAAA,EAAAA,GAAS,GAAD,OAAIJ,EAAJ,YAAaD,KAC1CM,MAAO,CACLC,KAAM,CACJf,SAAAA,EACAgB,MAAO,kBANf,WAWE,gBACEC,IACEP,EAAW,yCAC2BA,GAClC,kGAENQ,IAAKT,KAEP,cAAGH,UAAU,uBAAb,SAAqCG,QApBLD,e,yMC3B9CW,EAAS,4CACfC,IAAAA,SAAAA,QAAyB,gCAElB,IAAMhB,EAAmB,mCAAG,+FAC3BiB,EAD2B,4BACQF,GADR,SAGFC,IAAAA,IAAUC,GAHR,uBAGnBvB,EAHmB,EAGzBwB,KAHyB,kBAK1BxB,GAL0B,2CAAH,qDAQnByB,EAAY,mCAAG,WAAOC,GAAP,kFACpBH,EADoB,sBACSF,EADT,4DACmEK,GADnE,SAGKJ,IAAAA,IAAUC,GAHf,uBAGZvB,EAHY,EAGlBwB,KAHkB,kBAKnBxB,GALmB,2CAAH,sDAQZ2B,EAAe,mCAAG,WAAOC,GAAP,kFACvBL,EADuB,gBACAK,GADA,OACUP,EADV,4BAGCC,IAAAA,IAAUC,GAHX,uBAGfM,EAHe,EAGrBL,KAHqB,kBAKtBK,GALsB,2CAAH,sDAQfC,EAAY,mCAAG,WAAOF,GAAP,kFACpBL,EADoB,gBACGK,EADH,mBACqBP,EADrB,4BAGHC,IAAAA,IAAUC,GAHP,uBAGlBC,EAHkB,EAGlBA,KAHkB,kBAKnBA,GALmB,2CAAH,sDAQZO,EAAU,mCAAG,WAAOH,GAAP,kFAClBL,EADkB,gBACKK,EADL,mBACuBP,EADvB,4BAGDC,IAAAA,IAAUC,GAHT,uBAGhBC,EAHgB,EAGhBA,KAHgB,kBAKjBA,GALiB,2CAAH,uD,kGClCVT,EAAW,SAACiB,GAAD,OACtBC,GAAAA,CAAQD,EAAQ,CACdE,OAAO,KAGEC,EAAgB,SAACC,GAAD,OAAUA,EAAKC,MAAM,cAAc","sources":["pages/HomePage/HomePage.js","services/fetchApi.js","services/slug.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { fetchTrendingMovies } from \"../../services/fetchApi\";\nimport { makeSlug } from \"../../services/slug\";\nimport './HomePage.css';\n\nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n  \n    const location = useLocation();\n  \n    useEffect(() => {\n      const getMovies = async () => {\n        const { results } = await fetchTrendingMovies();\n  \n        setMovies(results);\n      };\n  \n      getMovies();\n    }, []);\n\n    return (\n        <section className=\"homePage\">\n          <div className=\"mainContainer\">\n            <h2 className=\"title\">Trending Today</h2>\n    \n            <ul className=\"movielist\">\n              {movies.map(({ id, title, poster_path }) => (\n                <li className=\"movielist_item\" key={id}>\n                  <Link\n                    to={{\n                      pathname: `/movies/${makeSlug(`${title} ${id}`)}`,\n                      state: {\n                        from: {\n                          location,\n                          label: \"Back to Home\",\n                        },\n                      },\n                    }}\n                  >\n                    <img\n                      src={\n                        poster_path\n                          ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                          : \"https://image.shutterstock.com/image-vector/no-image-available-photo-coming-600w-2059817444.jpg\"\n                        }\n                      alt={title}\n                    />\n                    <p className=\"movielist_movietitle\">{title}</p>\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </section>\n      );\n    };\n    \n    export default Home;\n    ","import axios from \"axios\";\nconst apiKey = \"?api_key=90cb713cbad21b579532fb5c59ca1f23\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nexport const fetchTrendingMovies = async () => {\n  const queryString = `trending/movie/day${apiKey}`;\n\n  const { data: movies } = await axios.get(queryString);\n\n  return movies;\n};\n\nexport const searchMovies = async (stringToSearch) => {\n  const queryString = `search/movie${apiKey}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n\n  const { data: movies } = await axios.get(queryString);\n\n  return movies;\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const queryString = `movie/${movieId}${apiKey}&language=en-US`;\n\n  const { data: movie } = await axios.get(queryString);\n\n  return movie;\n};\n\nexport const getMovieCast = async (movieId) => {\n  const queryString = `movie/${movieId}/credits${apiKey}&language=en-US`;\n\n  const { data } = await axios.get(queryString);\n\n  return data;\n};\n\nexport const getReviews = async (movieId) => {\n  const queryString = `movie/${movieId}/reviews${apiKey}&language=en-US`;\n\n  const { data } = await axios.get(queryString);\n\n  return data;\n};","import slugify from \"slugify\";\n\nexport const makeSlug = (string) =>\n  slugify(string, {\n    lower: true,\n  });\n\nexport const getIdFromSlug = (slug) => slug.match(/[a-z0-9]+$/)[0];"],"names":["useState","movies","setMovies","location","useLocation","useEffect","getMovies","fetchTrendingMovies","results","className","map","id","title","poster_path","to","pathname","makeSlug","state","from","label","src","alt","apiKey","axios","queryString","data","searchMovies","stringToSearch","getMovieDetails","movieId","movie","getMovieCast","getReviews","string","slugify","lower","getIdFromSlug","slug","match"],"sourceRoot":""}